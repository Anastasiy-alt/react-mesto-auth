{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiavolokitina/Documents/GitHub/mesto-react/src/components/AddPlacePopup.js\";\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport { CurrentUserContext } from '../context/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(_ref) {\n  let {\n    isOpen,\n    onClose\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"add\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    button: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"popup__input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"popup__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"popup__item popup__item_input_name\",\n          name: \"name\",\n          maxLength: \"40\",\n          minLength: \"2\",\n          required: true,\n          id: \"name\",\n          placeholder: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__input-error name-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"popup__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"popup__item popup__item_input_info\",\n          name: \"info\",\n          maxLength: \"200\",\n          minLength: \"2\",\n          required: true,\n          id: \"info\",\n          placeholder: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__input-error info-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `button popup__button popup__button_for_add`,\n        type: \"submit\",\n        children: button || 'Сохранить'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AddPlacePopup;\n;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["useState","useEffect","useContext","useRef","CurrentUserContext","PopupWithForm","AddPlacePopup","isOpen","onClose","button"],"sources":["/Users/anastasiavolokitina/Documents/GitHub/mesto-react/src/components/AddPlacePopup.js"],"sourcesContent":["import { useState, useEffect, useContext, useRef } from 'react';\nimport { CurrentUserContext } from '../context/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onClose,  }) {\n    return (\n        <PopupWithForm name=\"add\" title=\"Новое место\" button=\"Создать\" isOpen={isOpen} onClose={onClose}>\n            <fieldset className=\"popup__input\">\n                <label className=\"popup__label\">\n                    <input type=\"text\" className=\"popup__item popup__item_input_name\" name=\"name\" maxLength=\"40\"\n                        minLength=\"2\" required id=\"name\" placeholder=\"Имя\" />\n                    <span className=\"popup__input-error name-error\"></span>\n                </label>\n                <label className=\"popup__label\">\n                    <input type=\"text\" className=\"popup__item popup__item_input_info\" name=\"info\" maxLength=\"200\"\n                        minLength=\"2\" required id=\"info\" placeholder=\"Информация\" />\n                    <span className=\"popup__input-error info-error\"></span>\n                </label>\n                <button className={`button popup__button popup__button_for_add`} type=\"submit\">{button || 'Сохранить'}</button>\n            </fieldset>\n        </PopupWithForm>\n    )\n};\n\nexport default AddPlacePopup;"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAwD,OAAxD;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,aAAT,OAA8C;EAAA,IAAvB;IAAEC,MAAF;IAAUC;EAAV,CAAuB;EAC1C,oBACI,QAAC,aAAD;IAAe,IAAI,EAAC,KAApB;IAA0B,KAAK,EAAC,+DAAhC;IAA8C,MAAM,EAAC,4CAArD;IAA+D,MAAM,EAAED,MAAvE;IAA+E,OAAO,EAAEC,OAAxF;IAAA,uBACI;MAAU,SAAS,EAAC,cAApB;MAAA,wBACI;QAAO,SAAS,EAAC,cAAjB;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAC,oCAA7B;UAAkE,IAAI,EAAC,MAAvE;UAA8E,SAAS,EAAC,IAAxF;UACI,SAAS,EAAC,GADd;UACkB,QAAQ,MAD1B;UAC2B,EAAE,EAAC,MAD9B;UACqC,WAAW,EAAC;QADjD;UAAA;UAAA;UAAA;QAAA,QADJ,eAGI;UAAM,SAAS,EAAC;QAAhB;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAMI;QAAO,SAAS,EAAC,cAAjB;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAC,oCAA7B;UAAkE,IAAI,EAAC,MAAvE;UAA8E,SAAS,EAAC,KAAxF;UACI,SAAS,EAAC,GADd;UACkB,QAAQ,MAD1B;UAC2B,EAAE,EAAC,MAD9B;UACqC,WAAW,EAAC;QADjD;UAAA;UAAA;UAAA;QAAA,QADJ,eAGI;UAAM,SAAS,EAAC;QAAhB;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ,eAWI;QAAQ,SAAS,EAAG,4CAApB;QAAiE,IAAI,EAAC,QAAtE;QAAA,UAAgFC,MAAM,IAAI;MAA1F;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;KAlBQH,a;AAkBR;AAED,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}